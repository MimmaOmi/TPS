@model PGDIT_TPS.Models.Account.Account
@{
    Session["userID"] = Model.Studentid;
    ViewBag.Title = "Update";
    if (Session["userID"] == null)
    {
        Response.Redirect("~/Login/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- Mobile Specific Metas -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<!-- Font-->
<link rel="stylesheet" type="text/css" href="/assets/css/opensans-font.css">
<link rel="stylesheet" type="text/css" href="/assets/fonts/material-design-iconic-font.min.css">
<!-- Main Style Css -->
<link rel="stylesheet" href="/assets/css/styler.css" />
<h2>Update</h2>
@*@using (Html.BeginForm("UpdateDetails", "Home", FormMethod.Post))
{
    <fieldset>
            @Html.EditorFor(model => model.Studentname,new { htmlAttributes = new { @id="stuname"} })
            <button class="btn btn-success" onclick="update()">Update</button>
           @Html.EditorFor(model => model.image, new { htmlAttributes = new { @type = "file", @multiple = "multiple" } })
            <button class="btn btn-success">Browse</button>
            @ViewBag.Message
        </fieldset>
}*@

    <div class="page-content">
        <div class="form-v1-content">
            <div class="wizard-form">
                <form class="form-register">
                    <div id="form-total">
                        <h2>
                            <img src="~/assets/images/mimma.jpeg" alt="mimma">
                        </h2>
                        <section>
                            <div class="inner">
                                <div class="wizard-header">
                                    <h3 class="heading">Peronal Infomation</h3>
                                    <p>Edit your information</p>
                                    <button onclick="editdata()">Edit</button>
                                </div>
                                <div class="form-row">
                                    <div class="form-holder">
                                        <fieldset>
                                            <legend>Student Name</legend>
                                            @*@Html.TextBoxFor(model => model.Studentname)*@
                                            @*@Html.HiddenFor(model => model.Studentid, new { htmlAttributes = new { @id = "stuid" } })*@
                                            @Html.EditorFor(model => model.Studentname, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                        </fieldset>
                                    </div>
                                    <div class="form-holder">
                                        <fieldset>
                                            <legend>Student ID</legend>
                                            @Html.EditorFor(model => model.Studentid, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-holder">
                                        <fieldset>
                                            <legend>Father's Name</legend>
                                            @Html.EditorFor(model => model.fathername, new { htmlAttributes = new { @class = "form-control", @id = "faname", @type = "text" } })
                                        </fieldset>
                                    </div>
                                    <div class="form-holder">
                                        <fieldset>
                                            <legend>Mother's Name</legend>
                                            @Html.EditorFor(model => model.mothername, new { htmlAttributes = new { @class = "form-control", @id = "last-name", @type = "text" } })
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-holder">
                                        <fieldset>
                                            <legend>Gender</legend>
                                            @Html.EditorFor(model => model.Studentid, new { htmlAttributes = new { @class = "form-control", @id = "last-name", @type = "text" } })
                                        </fieldset>
                                    </div>
                                    <div class="form-holder">
                                        <fieldset>
                                            <legend>Religion</legend>
                                            @Html.EditorFor(model => model.Studentid, new { htmlAttributes = new { @class = "form-control", @id = "last-name", @type = "text" } })
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-holder form-holder-2">
                                        <fieldset>
                                            <legend>Address</legend>
                                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @id = "adrs", @type = "text" } })
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-holder form-holder-2">
                                        <fieldset>
                                            <legend>Email</legend>
                                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @id = "last-name", @type = "text" } })
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-holder form-holder-2">
                                        <fieldset>
                                            <legend>Phone Number</legend>
                                            @Html.EditorFor(model => model.contactno, new { htmlAttributes = new { @class = "form-control", @id = "last-name", @type = "text" } })
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="form-row form-row-date">
                                    <div class="form-holder form-holder-2">
                                        <label class="special-label">Birth Date:</label>
                                        @Html.EditorFor(model => model.dob, "{0:dd-mm-yyyy}", new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                        @*@Html.FormatValue((object)Convert.ChangeType(Model.dob, typeof(object)),"{0: dd-MM-yyyy}")*@
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-holder form-holder-2">
                                        <fieldset>
                                            <legend>National ID</legend>
                                            @Html.EditorFor(model => model.nid, new { htmlAttributes = new { @class = "form-control", @id = "last-name", @type = "text" } })
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <button class="btn btn-success" onclick="updatestu()">
                                        Update
                                    </button>
                                    @*@Html.ActionLink("Update", "UpdateDetails", "Home", null,new { @class = "btn btn-success",@type="button" })
                                        <button onclick="event.preventDefault();window.location.href='@Url.Action("UpdateDetails", "Home")'" class="btn btn-success">Update<i class="glyphicon glyphicon-search"></i></button>*@
                                </div>
                            </div>
                        </section>
                    </div>
                </form>
            </div>
        </div>
    </div>

    
<script src="~/assets/js/jquery-3.3.1.min.js"></script>
<script src="/assets/js/jquery.steps.js"></script>
<script src="/assets/js/main.js"></script>
@*<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script type="text/javascript">   

    function updatestu() {
        var data = {
            Studentname: $("#Studentname").val(),
            Studentid : $("#Studentid").val()
        };
        //var Studentid = $("#Studentid").val();
        //console.log(acc,Studentid)
        $.ajax({
            type: "POST",
            url: '/Home/UpdateDetails',
            data: JSON.stringify(data),
            datatype: 'json',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //$("#Container").html(data);
                console.log(data);
            }
            
        });
    };
</script>

